{
  "openapi": "3.0.0",
  "info": {
    "title": "Project Service API",
    "version": "1.0.0",
    "description": "API documentation for project management service"
  },
  "servers": [
    {
      "url": "http://localhost:3003/api/v1/projects",
      "description": "Development server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get all projects",
        "description": "Get all projects with filtering and pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "default": 1 },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["PLANNING", "ACTIVE", "ON_HOLD", "COMPLETED", "ARCHIVED"]
            },
            "description": "Filter by project status"
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["LOW", "MEDIUM", "HIGH", "URGENT"]
            },
            "description": "Filter by project priority"
          },
          {
            "name": "projectType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["INTERNAL", "CLIENT", "RESEARCH", "MAINTENANCE"]
            },
            "description": "Filter by project type"
          },
          {
            "name": "search",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Search in project name and description"
          },
          {
            "name": "projectManagerId",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by project manager ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Projects retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "projects": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Project" }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User ID not provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Projects"],
        "summary": "Create a new project",
        "description": "Create a new project",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateProjectRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "project": { "$ref": "#/components/schemas/Project" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "401": {
            "description": "Unauthorized - User ID not provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get project by ID",
        "description": "Get a specific project by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Project retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "project": { "$ref": "#/components/schemas/Project" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User ID not provided"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Projects"],
        "summary": "Update project",
        "description": "Update an existing project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateProjectRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "project": { "$ref": "#/components/schemas/Project" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "401": {
            "description": "Unauthorized - User ID not provided"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "Delete project",
        "description": "Archive a project (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Project archived successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User ID not provided"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/{id}/members": {
      "post": {
        "tags": ["Project Members"],
        "summary": "Add member to project",
        "description": "Add a member to a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["userId"],
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "User ID to add to the project"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data"
          },
          "401": {
            "description": "Unauthorized - User ID not provided"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/{id}/members/{memberId}": {
      "delete": {
        "tags": ["Project Members"],
        "summary": "Remove member from project",
        "description": "Remove a member from a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Project ID"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Member ID to remove from the project"
          }
        ],
        "responses": {
          "200": {
            "description": "Member removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User ID not provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Project": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "status": {
            "type": "string",
            "enum": ["PLANNING", "ACTIVE", "ON_HOLD", "COMPLETED", "ARCHIVED"]
          },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "URGENT"]
          },
          "projectType": {
            "type": "string",
            "enum": ["INTERNAL", "CLIENT", "RESEARCH", "MAINTENANCE"]
          },
          "startDate": { "type": "string", "format": "date-time" },
          "endDate": { "type": "string", "format": "date-time" },
          "budget": { "type": "number" },
          "createdBy": { "type": "string" },
          "updatedBy": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "projectManager": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "email": { "type": "string" },
              "avatarUrl": { "type": "string" }
            }
          },
          "client": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "email": { "type": "string" }
            }
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string" },
                "email": { "type": "string" },
                "avatarUrl": { "type": "string" },
                "role": { "type": "string" }
              }
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "title": { "type": "string" },
                "status": { "type": "string" },
                "priority": { "type": "string" },
                "assignedTo": { "type": "string" },
                "dueDate": { "type": "string", "format": "date-time" }
              }
            }
          },
          "_count": {
            "type": "object",
            "properties": {
              "tasks": { "type": "integer" },
              "members": { "type": "integer" }
            }
          }
        }
      },
      "CreateProjectRequest": {
        "type": "object",
        "required": ["name", "projectManagerId"],
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "status": {
            "type": "string",
            "enum": ["PLANNING", "ACTIVE", "ON_HOLD", "COMPLETED", "ARCHIVED"]
          },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "URGENT"]
          },
          "projectType": {
            "type": "string",
            "enum": ["INTERNAL", "CLIENT", "RESEARCH", "MAINTENANCE"]
          },
          "startDate": { "type": "string", "format": "date-time" },
          "endDate": { "type": "string", "format": "date-time" },
          "budget": { "type": "number" },
          "projectManagerId": { "type": "string" },
          "clientId": { "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } }
        }
      },
      "UpdateProjectRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "status": {
            "type": "string",
            "enum": ["PLANNING", "ACTIVE", "ON_HOLD", "COMPLETED", "ARCHIVED"]
          },
          "priority": {
            "type": "string",
            "enum": ["LOW", "MEDIUM", "HIGH", "URGENT"]
          },
          "projectType": {
            "type": "string",
            "enum": ["INTERNAL", "CLIENT", "RESEARCH", "MAINTENANCE"]
          },
          "startDate": { "type": "string", "format": "date-time" },
          "endDate": { "type": "string", "format": "date-time" },
          "budget": { "type": "number" },
          "projectManagerId": { "type": "string" },
          "clientId": { "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": { "type": "integer" },
          "limit": { "type": "integer" },
          "total": { "type": "integer" },
          "totalPages": { "type": "integer" }
        }
      }
    }
  }
}
