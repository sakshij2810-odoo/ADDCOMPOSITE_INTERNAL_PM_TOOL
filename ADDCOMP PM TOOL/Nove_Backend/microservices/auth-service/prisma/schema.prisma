// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  googleId     String?   @unique
  email        String    @unique
  name         String
  firstName    String?
  lastName     String?
  avatarUrl    String?
  role         UserRole  @default(EMPLOYEE)
  department   String?
  position     String?
  phone        String?
  isActive     Boolean   @default(true)
  lastLoginAt  DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  createdBy    String?
  updatedBy    String?
  
  // Nova World Group specific fields
  userFactId       Int?     @unique
  userUuid         String?  @unique
  status           String?  @default("ACTIVE")
  createdByUuid    String?
  createdByName    String?
  createTs         DateTime?
  insertTs         DateTime?
  userDimId        Int?
  roleUuid         String?
  roleValue        String?
  userProfileId    Int?
  personalEmail    String?
  jobTitle         String?
  userType         String?
  assignedPhoneNumber String?
  sharedEmail      String?
  mobile           String?
  homePhone        String?
  linkedinProfile  String?
  hireDate         DateTime?
  lastDayAtWork    DateTime?
  fax              String?
  dateOfBirth      DateTime?
  motherMaidenName String?
  photo            String?
  signature        String?
  streetAddress    String?
  unitOrSuite      String?
  city             String?
  csr              String?
  csrCode          String?
  marketer         String?
  marketerCode     String?
  producerOne      String?
  producerOneCode  String?
  producerTwo      String?
  producerTwoCode  String?
  producerThree    String?
  producerThreeCode String?
  branchCode       String?
  provinceOrState  String?
  postalCode       String?
  country          String?
  languagesKnown   String?
  documents        String?
  branchName       String?
  branchUuid       String?
  referralCode     String?

  @@map("users")
}

model Branch {
  id               Int      @id @default(autoincrement())
  branchUuid       String   @unique @default(uuid())
  branchName       String
  branchCode       String?
  branchEmail      String?
  branchLogo       String?
  description      String?
  branchPhoneNo    String?
  branchMobileNo   String?
  status           String   @default("ACTIVE")
  createdByUuid    String?
  createdByName    String?
  modifiedByUuid   String?
  modifiedByName   String?
  createTs         DateTime @default(now())
  insertTs         DateTime @default(now())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("branch")
}

enum UserRole {
  EMPLOYEE
  PROJECT_MANAGER
  ADMIN
}

// UserRole enum values: EMPLOYEE, PROJECT_MANAGER, ADMIN
